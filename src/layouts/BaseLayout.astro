---
/* Import shared CSS here so every page using this layout gets it */
import "../styles/global.css";

const { title = "Site" } = Astro.props;
const pathname = Astro.url.pathname;
const isActive = (href) => (href === "/" ? pathname === "/" : pathname.startsWith(href));

const GA_ID = import.meta.env.PUBLIC_GA_ID;
const ENABLE_GA = import.meta.env.PROD && !!GA_ID;

---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
        {ENABLE_GA && (
  <>
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}></script>
    <script is:inline define:vars={{ GA_ID }}>
      // GA4 init
      window.dataLayer = window.dataLayer || [];
      function gtag(){ dataLayer.push(arguments); }
      gtag('js', new Date());
      // Use the injected variable directly (no quotes, no braces)
      gtag('config', GA_ID);
    </script>
  </>
)}



    <title>{title}</title>

    <!-- (No manual <link> tag needed; the import above handles it) -->

    <style>
      .site-header{position:sticky;top:0;z-index:100;background:color-mix(in srgb,var(--panel) 92%, transparent);backdrop-filter:blur(8px);border-bottom:1px solid var(--border)}
      .site-nav{display:flex;align-items:center;justify-content:space-between;gap:12px;min-height:56px}
      .brand{font-weight:700;color:var(--text);text-decoration:none}
      .brand:hover{color:var(--brand)}
      .links{display:flex;align-items:center;gap:18px;list-style:none;margin:0;padding:0}
      .links a{color:var(--text);text-decoration:none;padding:8px 6px;border-radius:8px}
      .links a:hover{color:var(--brand)}
      .links a.active{color:var(--brand);font-weight:700}
      .menu-toggle{display:none;background:var(--chip);border:1px solid var(--border);color:var(--text);padding:8px 10px;border-radius:10px;cursor:pointer}
      @media (max-width:820px){
        .menu-toggle{display:inline-flex}
        .links{display:none;position:absolute;right:24px;top:56px;background:var(--panel);border:1px solid var(--border);border-radius:12px;padding:10px;box-shadow:var(--shadow);flex-direction:column;gap:8px}
        .links.open{display:flex}
      }
      .wrap{ max-width: var(--site-max); margin: 0 auto; padding: 24px; }
      .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}
    </style>
  </head>
  <body>
    <header class="site-header">
      <nav class="site-nav wrap">
        <a class="brand" href="/">Tom Sullivan</a>
        <button class="menu-toggle" aria-controls="primary-nav" aria-expanded="false">
          <span class="sr-only">Toggle menu</span> â˜°
        </button>
        <ul id="primary-nav" class="links">
          <li><a class:list={{active:isActive("/")}} href="/">Home</a></li>
          <li><a class:list={{active:isActive("/#projects")}} href="/#projects">Projects</a></li>
          <li><a class:list={{active:isActive("/#about")}} href="/#about">About</a></li>
          <!--<li><a class:list={{active:isActive("/#contact")}} href="/#contact">Contact</a></li>
          <li>
  <a href="https://github.com/tomsullivan79" target="_blank" rel="noopener" title="GitHub" data-event="nav_github">GH</a>
</li>
          
          -->
<li>
  <a href="https://www.linkedin.com/in/work-with-tom-sullivan/" target="_blank" rel="noopener" title="LinkedIn" data-event="nav_linkedin" >LI</a>
</li>
        </ul>
      </nav>
    </header>

    <main class="wrap">
      <slot />
    </main>

    <script>
      (function(){
        const btn=document.querySelector('.menu-toggle');
        const list=document.getElementById('primary-nav');
        if(!btn||!list) return;
        btn.addEventListener('click',()=>{const open=list.classList.toggle('open'); btn.setAttribute('aria-expanded',open?'true':'false');});
      })();
    </script>

   <script is:inline>
  document.addEventListener('click', (e) => {
    const el = e.target.closest('[data-event]');
    if (!el || typeof gtag !== 'function') return;

    const sameTab = el.tagName === 'A' && !el.getAttribute('target');
    const name = el.getAttribute('data-event');
    const params = {
      link_url: el.href || null,
      link_text: (el.textContent || '').trim().slice(0, 80),
      location: window.location.pathname,
      transport_type: 'beacon',
    };

    if (sameTab) {
      e.preventDefault();
      const href = el.href;
      let done = false;
      gtag('event', name, {
        ...params,
        event_callback: () => { if (!done) { done = true; window.location.href = href; } }
      });
      setTimeout(() => { if (!done) window.location.href = href; }, 500); // fallback
    } else {
      gtag('event', name, params);
    }
  });
</script>


  </body>
</html>
