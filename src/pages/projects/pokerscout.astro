---
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout title="PokerScout — Portfolio 2025">
  <!-- HERO -->
  <header class="hero">
    <div>
      <div class="kicker">Portfolio 2025</div>
      <h1 style="margin:6px 0 10px; font-size:2.1rem">PokerScout</h1>
      <ul class="meta">
        <li class="chip">AI / LLM</li>
        <li class="chip">Agent.AI Workflow</li>
        <li class="chip">Prompt Engineering</li>
        <li class="chip">Analytics</li>
      </ul>
    </div>
    <div>
      <a class="btn" href="https://agent.ai/agent/PokerScout" target="_blank" rel="noopener" aria-label="Open PokerScout" style="margin-top:6px; display:inline-flex">
        Open PokerScout
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" aria-hidden="true" style="margin-left:4px">
          <path d="M14 3h7v7" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          <path d="M21 3l-9 9" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          <path d="M5 12v7h7" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </a>
    </div>
  </header>

  <!-- CONTENT -->
  <section class="section">
    <!-- Project Overview -->
    <article class="card" id="overview">
      <h2>Project Overview</h2>
      <p>
        PokerScout is an AI analyst that ingests a Hendon Mob player profile URL and outputs a standardized scouting dossier.
        It parses the page, extracts key stats and rankings, and models stake-aware performance (last 12 months &amp; lifetime).
        Output is delivered as a strict JSON schema and a clean HTML report.
      </p>
    </article>

    <!-- Genesis -->
    <article class="card" id="genesis">
      <h2>Genesis</h2>
      <p>
        Born from the need to look beyond “Total Live Earnings,” PokerScout converts a single Hendon Mob URL into an
        analyst-grade profile that blends stake-aware performance, competitive tiering, rankings, and travel cadence.
        The result is a production-ready Agent.AI workflow with a strict JSON contract and polished HTML report that
        standardizes scouting and reduces manual research into a fast, explainable output.
      </p>
    </article>

    <!-- Scope -->
    <article class="card" id="scope">
      <h2>Scope</h2>
      <ul>
        <li><b>Agent workflow design (Agent.AI):</b> Orchestrated the end-to-end action flow (input URL → fetch → parse → analyze → render).</li>
        <li><b>Prompt engineering:</b> Deterministic LLM prompt with a typed JSON contract, null-safe fields, and rule-based heuristics.</li>
        <li><b>Information extraction:</b> Patterns to pull player name, totals, min/max cash with years, GPI ranking, Popularity ranking, series counts, and location features from noisy HTML.</li>
        <li><b>Domain logic &amp; modeling:</b>
          <ul class="bullets-tight">
            <li>Stake tier classification from event titles (handling “buy-in + fee” formats &amp; currency hints).</li>
            <li>Final-table rules (9-max default, 6-/8-max detection).</li>
            <li>Competitive tiering with High Roller override by average buy-in and high-roller share.</li>
          </ul>
        </li>
        <li><b>Data normalization:</b> Standardized stake buckets (Low/Mid/High/High Roller), lifetime vs. 12-month views, percent-of-total calculations.</li>
        <li><b>Presentation &amp; UX:</b> Consistent HTML sections and reversed stake order (High Roller → High → Mid → Low) for performance blocks; inline definitions and graceful fallbacks (“Unavailable”).</li>
        <li><b>Quality &amp; robustness:</b> Null-handling, defensive parsing, consistent formatting to prevent broken placeholders.</li>
      </ul>
    </article>

    <!-- Skills Demonstrated -->
    <article class="card" id="skills">
      <h2>Skills Demonstrated</h2>
      <ul>
        <li><b>AI/LLM:</b> Prompt engineering, schema design, deterministic extraction, instruction following.</li>
        <li><b>Data parsing:</b> Regex/pattern matching, HTML text normalization, currency/buy-in interpretation.</li>
        <li><b>Analytics &amp; modeling:</b> Heuristic modeling for stake segmentation, temporal rollups.</li>
        <li><b>Product thinking:</b> Clear problem framing (beyond “Total Live Earnings”), explainable outputs, resilience to missing data.</li>
        <li><b>Frontend output:</b> Semantic HTML templating, readability, accessibility-friendly layout choices.</li>
        <li><b>Ops &amp; QA:</b> Error handling, guardrails, and reproducibility across profiles.</li>
      </ul>
    </article>

    <!-- Deliverables -->
    <article class="card" id="deliverables">
      <h2>Deliverables</h2>
      <ul>
        <li>Structured JSON schema (<code>playerInsights</code>) with clearly defined fields and enums.</li>
        <li>HTML report template matching the schema:
          <ul class="bullets-tight">
            <li>Results Summary (incl. GPI &amp; Popularity)</li>
            <li>Competitive Profile (Tier, Volume Style + concise descriptions)</li>
            <li>Activity &amp; Recency; Volume &amp; Consistency</li>
            <li>Financial Stats (min/max cash + years)</li>
            <li>Performance (Last 12 Months) &amp; Performance (Lifetime) by stake with cashes / % / wins / FTs (ordered HR → High → Mid → Low)</li>
            <li>Tournament Series Results (WSOP/WPT/EPT/Regional)</li>
            <li>Travel &amp; Tour Activity (cities, avg days, clusters)</li>
          </ul>
        </li>
      </ul>
    </article>
  </section>
</BaseLayout>

